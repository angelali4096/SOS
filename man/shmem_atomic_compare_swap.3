.TH SHMEM_ATOMIC_COMPARE_SWAP 1 2017-06-06 "Intel Corp." "OpenSHEMEM Library Documentation"
.SH NAME
shmem_atomic_compare_swap \-  Performs an atomic conditional swap on a remote data object.
.SH SYNOPSIS
.nf
.B C11: 
TYPE shmem_atomic_compare_swap(TYPE *dest, TYPE cond, 
			TYPE value, int pe);
.B C/C++: 
TYPE shmem_<TYPENAME>_atomic_compare_swap(TYPE *dest, 
			TYPE cond, TYPE value, int pe);

* TYPE is one of the extended AMO types
.B FORTRAN: 
INTEGER pe
INTEGER*4 SHMEM_INT4_CSWAP,  cond_i4, value_i4, ires_i4
ires_i4 = SHMEM_INT4_CSWAP(dest, cond_i4, value_i4, pe)
INTEGER*8 SHMEM_INT8_CSWAP,  cond_i8, value_i8, ires_i8
ires_i8 = SHMEM_INT8_CSWAP(dest, cond_i8, value_i8, pe)
.fi
.SH DESCRIPTION
.SS Arguments

.BR "OUT " - 
.I dest
- The remotely accessible integer data object to be  updated on the remote PE. 

.BR "IN " - 
.IR "cond " -
.I cond
is compared to the remote 
.I dest
value. If 
.I cond
and the remote 
.I dest
are equal, then 
.I value
is swapped into the remote 
.IR "dest" .
Otherwise, the remote 
.I dest
is  unchanged. In either case, the old value of the remote 
.I dest
is returned as the routine return value. 
.I cond
must be of the same data  type as 
.IR "dest" .

.BR "IN " - 
.I value
- The value to be atomically written to the remote PE. 
.I value
must be the same data type as 
.IR "dest" .

.BR "IN " - 
.I pe
- An integer that indicates the PE number upon which  
.I dest
is to be updated. If you are using Fortran, it must be a default integer value.
.SS API Description
The conditional swap routines conditionally update a 
.I dest
data object on the specified PE and return the prior contents of the data object in one atomic operation.

The 
.I dest
and 
.I source
data objects must conform to typing constraints, which are as follows:
.nf
Routine          | Data type of dest and source

SHMEM\_INT4\_CSWAP | 4-byte integer

SHMEM\_INT8\_CSWAP | 8-byte integer

.SS Return Values
The contents that had been in the 
.I dest
data object on the remote PE prior to the conditional swap. Data type is the same as the 
.I dest
data type.
.SS API Notes
As of OpenSHMEM 1.4, 
.B shmem\_cswap
has been deprecated. Its behavior and call signature are identical to the replacement interface, 
.BR "shmem\_atomic\_compare\_swap" .
.SS Example

The following call ensures that the first 
PE
to execute the conditional swap will successfully write its 
PE
number to 
.I race\_winner
on 
PE
0.

./
.nf
#include <stdio.h>
#include <shmem.h>

int main(void)
{
  static int race_winner = -1;
  shmem_init();
  int me = shmem_my_pe();
  int oldval = shmem_atomic_compare_swap(&race_winner, -1, me, 0);
  if (oldval == -1) printf("PE %d was first\\n", me);
  shmem_finalize();
  return 0;
}

.fi



